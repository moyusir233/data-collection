// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package test

import (
	"gitee.com/moyusir/dataCollection/internal/biz"
	"gitee.com/moyusir/dataCollection/internal/conf"
	"gitee.com/moyusir/dataCollection/internal/data"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// InitConfigUsecase 测试用的辅助函数
func InitConfigUsecase(confData *conf.Data, logger log.Logger) (*biz.ConfigUsecase, func(), error) {
	dataData, cleanup, err := data.NewData(confData, logger)
	if err != nil {
		return nil, nil, err
	}
	unionRepo := data.NewRedisRepo(dataData, logger)
	configUsecase := biz.NewConfigUsecase(unionRepo, logger)
	return configUsecase, func() {
		cleanup()
	}, nil
}

// InitWarningDetectUsecase 测试用的辅助函数
func InitWarningDetectUsecase(confData *conf.Data, logger log.Logger) (*biz.WarningDetectUsecase, func(), error) {
	dataData, cleanup, err := data.NewData(confData, logger)
	if err != nil {
		return nil, nil, err
	}
	unionRepo := data.NewRedisRepo(dataData, logger)
	warningDetectUsecase := biz.NewWarningDetectUsecase(unionRepo, logger)
	return warningDetectUsecase, func() {
		cleanup()
	}, nil
}
